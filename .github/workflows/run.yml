name: "BIS Tracker (calmer pacing + cooldowns)"

'on':
  schedule:
    - cron: '10 3 * * 1-5'   # ~06:10 Riga (03:10 UTC)
  workflow_dispatch: {}

jobs:
  scrape_and_email:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      - name: Random pre-start jitter (0–12 min)
        run: |
          S=$((RANDOM % 720))
          echo "Sleeping $S seconds before scraping..."
          sleep $S

      - name: Scrape (ceiling 3000; failed-first; cooldowns)
        env:
          # Baseline target & windows
          TARGET_MAX_PAGE: "3000"
          PAGES_PER_RUN: "3000"         # my pick; reduce if server is grumpy
          DELTA_SCAN_PAGES: "3000"
          FRONT_REFRESH_PAGES: "0"

          # Pacing & errors
          PAGE_DELAY_MS: "500"
          MAX_RETRIES_PER_PAGE: "0"
          RETRY_BASE_MS: "2000"
          GLOBAL_MINUTES_BUDGET: "75"
          CONTEXT_ROTATE_EVERY: "350"

          # Error-storm controls
          ERROR_BAIL_WINDOW: "20"
          ERROR_BAIL_THRESHOLD: "0.8"
          COOLDOWN_ON_STORM_MINUTES: "12"
          STORM_COOLDOWNS_MAX: "2"

          # Failed pages queue
          FAILED_PAGE_RETRY_LIMIT: "200"
          FAILED_PAGE_MAX_ATTEMPTS: "8"
        run: |
          python scraper.py

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-pages
          path: debug
          if-no-files-found: ignore

      - name: Commit state + reports + cursor
        run: |
          git config user.name "bis-bot"
          git config user.email "bis-bot@users.noreply.github.com"
          git add state/*.json reports/report_*.html reports/run_status.json reports/baseline_complete.flag || true
          git commit -m "Snapshot & reports: $(date -u +'%Y-%m-%d %H:%M')" || echo "Nothing to commit"
          git push

      - name: Read baseline flag
        id: baseline
        run: |
          if [ -f reports/baseline_complete.flag ]; then
            VAL=$(cat reports/baseline_complete.flag)
          else
            VAL="no"
          fi
          echo "complete=$VAL" >> "$GITHUB_OUTPUT"

      - name: Email (baseline building — full + delta)
        if: steps.baseline.outputs.complete == 'no'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: BIS tracker — bāzes skrējiens ${{ github.run_id }}
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          secure: false
          html_body: |
            <p>Sveiki! Turpinās bāzes momentuzņēmums līdz 3000. lapai. Pielikumā:</p>
            <ul>
              <li><code>report_full.html</code> — šī skrējiena pilnais atlasīto ierakstu saraksts</li>
              <li><code>report_delta.html</code> — tikai jauni ieraksti un stadiju izmaiņas</li>
            </ul>
          attachments: |
            reports/report_full.html
            reports/report_delta.html

      - name: Email (baseline complete — delta only)
        if: steps.baseline.outputs.complete == 'yes'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: BIS tracker — izmaiņas ${{ github.run_id }}
          to: ${{ secrets.MAIL_TO }}
          from: ${{ secrets.MAIL_FROM }}
          secure: false
          html_body: |
            <p>Sveiki! Pielikumā jaunumi un stadiju izmaiņas (delta) no šī skrējiena.</p>
          attachments: |
            reports/report_delta.html
